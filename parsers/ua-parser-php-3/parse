#!/usr/bin/env php
<?php

ini_set('memory_limit', -1);
ini_set('max_execution_time', -1);

$benchmarkPos = array_search('--benchmark', $argv);
$benchmark    = false;

if ($benchmarkPos !== false) {
    $benchmark = true;
    unset($argv[$benchmarkPos]);
    $argv = array_values($argv);
}

$agentListFile = $argv[1];

$results   = [];
$parseTime = 0;

$start = microtime(true);
require __DIR__ . '/vendor/autoload.php';
$parser = UAParser\Parser::create();
$parser->parse('Test String');
$initTime = microtime(true) - $start;

$file = new SplFileObject($agentListFile);
$file->setFlags(SplFileObject::DROP_NEW_LINE);

while (!$file->eof()) {
    $agentString = $file->fgets();

    if (!empty($agentString)) {
        $start = microtime(true);
        $r     = $parser->parse($agentString);
        $end   = microtime(true) - $start;

        $browserVersion  = $r->ua->toVersion();
        $platformVersion = $r->ua->toVersion();

        if (!$benchmark) {
            $results[] = [
                'useragent' => $agentString,
                'parsed'    => [
                    'browser' => [
                        'name'    => $r->ua->family,
                        'version' => $browserVersion,
                    ],
                    'platform' => [
                        'name'    => $r->os->family,
                        'version' => $platformVersion,
                    ],
                    'device' => [
                        'name'     => $r->device->model === null ? '' : $r->device->model,
                        'brand'    => $r->device->brand === null ? '' : $r->device->brand,
                        'type'     => null,
                        'ismobile' => null,
                    ],
                ],
                'time' => $end,
            ];
        }

        $parseTime += $end;
    }
}

$file = null;

$memory = memory_get_peak_usage();

// uap-php doesn't provide version information in code at all, looking to composer for the installed version
$installed = json_decode(file_get_contents(__DIR__ . '/vendor/composer/installed.json'), true);

foreach ($installed as $package) {
    if ($package['name'] == 'ua-parser/uap-php') {
        $version = $package['version'];
        break;
    }
}

$regexVersion = file_get_contents(__DIR__ . '/version.txt');

print json_encode([
    'results'     => $results,
    'parse_time'  => $parseTime,
    'init_time'   => $initTime,
    'memory_used' => $memory,
    'version'     => $version . '-' . $regexVersion,
]);
